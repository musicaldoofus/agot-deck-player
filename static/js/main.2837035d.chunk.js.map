{"version":3,"sources":["media/img/card-back.png","utils/sampleDeck.js","utils/getFromAPI.js","components/molecules/Page/index.js","components/pages/Root/index.js","components/molecules/HUD/index.js","components/atoms/CardPileBtn/index.js","components/molecules/Overlay/index.js","components/atoms/Card/index.js","components/molecules/CardList/index.js","components/organisms/PlotDeck/index.js","components/organisms/BoardArea/index.js","components/organisms/GameBoard/index.js","components/pages/Play/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","sampleDeck","factionCard","agendaCard","plotCards","active","pack_code","pack_name","type_code","type_name","faction_code","faction_name","position","code","name","cost","text","quantity","income","initiative","claim","reserve","deck_limit","designer","strength","traits","flavor","illustrator","is_unique","is_loyal","is_military","is_intrigue","is_power","octgn_id","is_multiple","image_url","url","label","ci","si","inactive","inPlay","characters","locations","currentHand","currentDrawDeck","currentDeadPile","currentDiscardPile","getFromAPI","_ref","arguments","length","undefined","type","id","_ref$format","format","scope","reqUrl","concat","Promise","resolve","reject","xhttp","XMLHttpRequest","onreadystatechange","this","readyState","status","responseText","open","send","Page","props","console","log","react_default","a","createElement","className","children","Root","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","molecules_Page","title","react_router_dom","to","Component","HUD","CardPileBtn","onClick","alt","src","CardBack","Overlay","Card","cardStatus","classNames","href","target","rel","toCard","cardProps","ind","atoms_Card_Card","assign","key","CardList","cards","Array","isArray","from","_","_this2","cardList","map","PlotDeck","isFullscreen","handleCardOnClick","bind","assertThisInitialized","handleToggleFullscreen","setState","c","molecules_Overlay","molecules_CardList","atoms_CardPileBtn","BoardArea","handleFullscreenToggle","split","join","CharacterArea","GameBoard","molecules_HUD","organisms_PlotDeck","deck","GameBoard_CharacterArea","organisms_BoardArea","expanded","singular","Play","organisms_GameBoard","App","routes","react_router","exact","path","render","pages_Root","pages_Play","window","location","indexOf","withHashRouter","withBrowserRouter","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2837035d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/card-back.e3957e7b.png\";","const sampleDeck = {\r\n\tfactionCard: {},\r\n\tagendaCard: {},\r\n\tplotCards: {\r\n\t\tactive: [\r\n\t\t\t{\"pack_code\":\"Core\",\"pack_name\":\"Core Set\",\"type_code\":\"plot\",\"type_name\":\"Plot\",\"faction_code\":\"neutral\",\"faction_name\":\"Neutral\",\"position\":1,\"code\":\"01001\",\"name\":\"A Clash of Kings\",\"cost\":null,\"text\":\"<b>Reaction:<\\/b> After you win a [power] challenge, move 1 power from the losing opponent's faction card to your own.\",\"quantity\":1,\"income\":4,\"initiative\":9,\"claim\":1,\"reserve\":6,\"deck_limit\":2,\"designer\":null,\"strength\":null,\"traits\":\"Noble.\",\"flavor\":\"\",\"illustrator\":\"Smirtouille\",\"is_unique\":false,\"is_loyal\":false,\"is_military\":false,\"is_intrigue\":false,\"is_power\":false,\"octgn_id\":\"de88edda-f5a4-4985-8ac1-2b8205c13416\",\"is_multiple\":false,\"image_url\":\"http:\\/\\/lcg-cdn.fantasyflightgames.com\\/got2nd\\/GT01_1.jpg\",\"url\":\"https:\\/\\/thronesdb.com\\/card\\/01001\",\"label\":\"A Clash of Kings\",\"ci\":4,\"si\":9},\r\n\t\t\t{\"pack_code\":\"Core\",\"pack_name\":\"Core Set\",\"type_code\":\"plot\",\"type_name\":\"Plot\",\"faction_code\":\"neutral\",\"faction_name\":\"Neutral\",\"position\":1,\"code\":\"01001\",\"name\":\"A Clash of Kings\",\"cost\":null,\"text\":\"<b>Reaction:<\\/b> After you win a [power] challenge, move 1 power from the losing opponent's faction card to your own.\",\"quantity\":1,\"income\":4,\"initiative\":9,\"claim\":1,\"reserve\":6,\"deck_limit\":2,\"designer\":null,\"strength\":null,\"traits\":\"Noble.\",\"flavor\":\"\",\"illustrator\":\"Smirtouille\",\"is_unique\":false,\"is_loyal\":false,\"is_military\":false,\"is_intrigue\":false,\"is_power\":false,\"octgn_id\":\"de88edda-f5a4-4985-8ac1-2b8205c13416\",\"is_multiple\":false,\"image_url\":\"http:\\/\\/lcg-cdn.fantasyflightgames.com\\/got2nd\\/GT01_1.jpg\",\"url\":\"https:\\/\\/thronesdb.com\\/card\\/01001\",\"label\":\"A Clash of Kings\",\"ci\":4,\"si\":9},\r\n\t\t\t{\"pack_code\":\"Core\",\"pack_name\":\"Core Set\",\"type_code\":\"plot\",\"type_name\":\"Plot\",\"faction_code\":\"neutral\",\"faction_name\":\"Neutral\",\"position\":1,\"code\":\"01001\",\"name\":\"A Clash of Kings\",\"cost\":null,\"text\":\"<b>Reaction:<\\/b> After you win a [power] challenge, move 1 power from the losing opponent's faction card to your own.\",\"quantity\":1,\"income\":4,\"initiative\":9,\"claim\":1,\"reserve\":6,\"deck_limit\":2,\"designer\":null,\"strength\":null,\"traits\":\"Noble.\",\"flavor\":\"\",\"illustrator\":\"Smirtouille\",\"is_unique\":false,\"is_loyal\":false,\"is_military\":false,\"is_intrigue\":false,\"is_power\":false,\"octgn_id\":\"de88edda-f5a4-4985-8ac1-2b8205c13416\",\"is_multiple\":false,\"image_url\":\"http:\\/\\/lcg-cdn.fantasyflightgames.com\\/got2nd\\/GT01_1.jpg\",\"url\":\"https:\\/\\/thronesdb.com\\/card\\/01001\",\"label\":\"A Clash of Kings\",\"ci\":4,\"si\":9},\r\n\t\t\t{\"pack_code\":\"Core\",\"pack_name\":\"Core Set\",\"type_code\":\"plot\",\"type_name\":\"Plot\",\"faction_code\":\"neutral\",\"faction_name\":\"Neutral\",\"position\":1,\"code\":\"01001\",\"name\":\"A Clash of Kings\",\"cost\":null,\"text\":\"<b>Reaction:<\\/b> After you win a [power] challenge, move 1 power from the losing opponent's faction card to your own.\",\"quantity\":1,\"income\":4,\"initiative\":9,\"claim\":1,\"reserve\":6,\"deck_limit\":2,\"designer\":null,\"strength\":null,\"traits\":\"Noble.\",\"flavor\":\"\",\"illustrator\":\"Smirtouille\",\"is_unique\":false,\"is_loyal\":false,\"is_military\":false,\"is_intrigue\":false,\"is_power\":false,\"octgn_id\":\"de88edda-f5a4-4985-8ac1-2b8205c13416\",\"is_multiple\":false,\"image_url\":\"http:\\/\\/lcg-cdn.fantasyflightgames.com\\/got2nd\\/GT01_1.jpg\",\"url\":\"https:\\/\\/thronesdb.com\\/card\\/01001\",\"label\":\"A Clash of Kings\",\"ci\":4,\"si\":9},\r\n\t\t\t{\"pack_code\":\"Core\",\"pack_name\":\"Core Set\",\"type_code\":\"plot\",\"type_name\":\"Plot\",\"faction_code\":\"neutral\",\"faction_name\":\"Neutral\",\"position\":1,\"code\":\"01001\",\"name\":\"A Clash of Kings\",\"cost\":null,\"text\":\"<b>Reaction:<\\/b> After you win a [power] challenge, move 1 power from the losing opponent's faction card to your own.\",\"quantity\":1,\"income\":4,\"initiative\":9,\"claim\":1,\"reserve\":6,\"deck_limit\":2,\"designer\":null,\"strength\":null,\"traits\":\"Noble.\",\"flavor\":\"\",\"illustrator\":\"Smirtouille\",\"is_unique\":false,\"is_loyal\":false,\"is_military\":false,\"is_intrigue\":false,\"is_power\":false,\"octgn_id\":\"de88edda-f5a4-4985-8ac1-2b8205c13416\",\"is_multiple\":false,\"image_url\":\"http:\\/\\/lcg-cdn.fantasyflightgames.com\\/got2nd\\/GT01_1.jpg\",\"url\":\"https:\\/\\/thronesdb.com\\/card\\/01001\",\"label\":\"A Clash of Kings\",\"ci\":4,\"si\":9},\r\n\t\t\t{\"pack_code\":\"Core\",\"pack_name\":\"Core Set\",\"type_code\":\"plot\",\"type_name\":\"Plot\",\"faction_code\":\"neutral\",\"faction_name\":\"Neutral\",\"position\":1,\"code\":\"01001\",\"name\":\"A Clash of Kings\",\"cost\":null,\"text\":\"<b>Reaction:<\\/b> After you win a [power] challenge, move 1 power from the losing opponent's faction card to your own.\",\"quantity\":1,\"income\":4,\"initiative\":9,\"claim\":1,\"reserve\":6,\"deck_limit\":2,\"designer\":null,\"strength\":null,\"traits\":\"Noble.\",\"flavor\":\"\",\"illustrator\":\"Smirtouille\",\"is_unique\":false,\"is_loyal\":false,\"is_military\":false,\"is_intrigue\":false,\"is_power\":false,\"octgn_id\":\"de88edda-f5a4-4985-8ac1-2b8205c13416\",\"is_multiple\":false,\"image_url\":\"http:\\/\\/lcg-cdn.fantasyflightgames.com\\/got2nd\\/GT01_1.jpg\",\"url\":\"https:\\/\\/thronesdb.com\\/card\\/01001\",\"label\":\"A Clash of Kings\",\"ci\":4,\"si\":9},\r\n\t\t\t{\"pack_code\":\"Core\",\"pack_name\":\"Core Set\",\"type_code\":\"plot\",\"type_name\":\"Plot\",\"faction_code\":\"neutral\",\"faction_name\":\"Neutral\",\"position\":1,\"code\":\"01001\",\"name\":\"A Clash of Kings\",\"cost\":null,\"text\":\"<b>Reaction:<\\/b> After you win a [power] challenge, move 1 power from the losing opponent's faction card to your own.\",\"quantity\":1,\"income\":4,\"initiative\":9,\"claim\":1,\"reserve\":6,\"deck_limit\":2,\"designer\":null,\"strength\":null,\"traits\":\"Noble.\",\"flavor\":\"\",\"illustrator\":\"Smirtouille\",\"is_unique\":false,\"is_loyal\":false,\"is_military\":false,\"is_intrigue\":false,\"is_power\":false,\"octgn_id\":\"de88edda-f5a4-4985-8ac1-2b8205c13416\",\"is_multiple\":false,\"image_url\":\"http:\\/\\/lcg-cdn.fantasyflightgames.com\\/got2nd\\/GT01_1.jpg\",\"url\":\"https:\\/\\/thronesdb.com\\/card\\/01001\",\"label\":\"A Clash of Kings\",\"ci\":4,\"si\":9},\r\n\t\t],\r\n\t\tinactive: []\r\n\t},\r\n\tinPlay: {\r\n\t\tcharacters: {\r\n\t\t\tactive: [],\r\n\t\t\tinactive: []\r\n\t\t},\r\n\t\tlocations: {\r\n\t\t\tactive: [],\r\n\t\t\tinactive: []\r\n\t\t}\r\n\t},\r\n\tcurrentHand: [],\r\n\tcurrentDrawDeck: [],\r\n\tcurrentDeadPile: [],\r\n\tcurrentDiscardPile: []\r\n}\r\n\r\nexport default sampleDeck;","//documentation --> https://thronesdb.com/api/doc\r\nimport sampleDeck from './sampleDeck';\r\n\r\nconst getFromAPI = ({type, id, format = '.json'} = {}) => { //allow  default format to be json\r\n\tif (type === 'cards') return sampleDeck;\r\n\tconst rootUrl = 'https://thronesdb.com/api';\r\n\tconst scope = type === 'card' ? 'public' : 'oauth2';\r\n\tconst reqUrl = `${rootUrl}/${scope}/${type}/${id}${format}`;\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst xhttp = new XMLHttpRequest();\r\n\t\txhttp.onreadystatechange = function() {\r\n\t\t\tif (this.readyState === 4 && this.status === 200) resolve(this.responseText);\r\n\t\t};\r\n\t\txhttp.open(\"GET\", reqUrl);\r\n\t\txhttp.send();\r\n\t});\r\n};\r\n\r\nexport default getFromAPI;","import React from 'react';\r\nimport './Page.css';\r\n\r\nconst Page = (props) => {\r\n\tconsole.log('Page', props);\r\n\treturn (\r\n\t\t<div className=\"page\">\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Page;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Page from '../../molecules/Page';\r\nimport './Root.css';\r\n\r\nclass Root extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\t\r\n\t\t};\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tconsole.log('mounted <Root>', this.props);\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Page title=\"Play\">\r\n\t\t\t\t<h1>Root</h1>\r\n\t\t\t\t<Link to=\"/play\">Play</Link>\r\n\t\t\t</Page>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Root;","import React from 'react';\r\nimport './HUD.css';\r\n\r\nconst HUD = () => (\r\n\t<div id=\"heads-up-display\" className=\"heads-up-display\">\r\n\t\r\n\t</div>\r\n);\r\n\r\nexport default HUD;","import React from 'react';\r\nimport CardBack from '../../../media/img/card-back.png';\r\nimport './CardPileBtn.css';\r\n\r\nconst CardPileBtn = ({onClick}) => {\r\n\treturn (\r\n\t\t<div className=\"btn card-pile-btn\" onClick={onClick}>\r\n\t\t\t<img alt=\"pile of cards\" src={CardBack}/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardPileBtn;","import React from 'react';\r\nimport './Overlay.css';\r\n\r\nconst Overlay = ({children}) => (\r\n\t<div className=\"overlay-container\">\r\n\t\t<div className=\"overlay\">\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t</div>\r\n);\r\n\r\nexport default Overlay;","import React from 'react';\r\nimport CardBack from '../../../media/img/card-back.png';\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n\tconst { code, url, onClick, name, image_url, cardStatus, classNames } = props;\r\n\tconsole.log(code, url, onClick, name, image_url, cardStatus, classNames);\r\n\treturn (\r\n\t\t<div onClick={() => onClick(props)} className={`card ${cardStatus}${classNames ? ' ' + classNames : ''}`}>\r\n\t\t\t<img alt={name} src={cardStatus === 'knelt' ? CardBack : image_url}/>\r\n\t\t\t<a href={url} target=\"_blank\" rel=\"noopener noreferrer\">Card page</a>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst toCard = ({cardProps, ind, onClick}) => <Card key={cardProps.code + '-' + ind} {...cardProps} onClick={onClick}/>;\r\n\r\nexport default Card;\r\nexport { toCard };","import React, { Component } from 'react';\r\nimport { toCard } from '../../atoms/Card';\r\nimport getFromAPI from '../../../utils/getFromAPI';\r\nimport CardBack from '../../../media/img/card-back.png';\r\nimport './CardList.css';\r\n\r\n/*\r\nDefinition for CardList\r\n- should only be used when multiple cards can be shown (even if only a single card is passed in props)\r\n- may be shown as child of Overlay i.e. <Overlay><CardList></Overlay>\r\n- must be simplistic with few dependencies\r\n*/\r\n\r\nclass CardList extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tconsole.log('constructor', props);\r\n\t\tthis.state = {\r\n\t\t\tcards: Array.isArray(this.props.cards) ? this.props.cards : Array.from({length: 1}, (_) => this.props.cards)\r\n\t\t};\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconsole.log('render <CardList>', this.state.cards);\r\n\t\tconst cardList = this.state.cards.map((cardProps, ind) => toCard({cardProps, ind, onClick: this.props.onClick}));\r\n\t\treturn (\r\n\t\t\t<div className={`card-list${this.props.classNames ? ' ' + this.props.classNames : ''}`}>\r\n\t\t\t\t{cardList}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n//this class is designed for (listOfCodesToQuery) => (manipulatedDisplayOfAPIResults)\r\nclass CardListAsync extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcards: []\r\n\t\t};\r\n\t\tthis.success = this.success.bind(this);\r\n\t\tthis.failure = this.failure.bind(this);\r\n\t\tconst cards = Array.isArray(this.props.cards) ? this.props.cards : Array.from(1, (_) => this.props.cards); //handle potential single Card objects being passed instead of a list\r\n\t\tcards.forEach(id => getFromAPI({type: 'card', id})\r\n\t\t\t.then(this.success)\r\n\t\t\t.catch(this.failure)\r\n\t\t);\r\n\t}\r\n\t\r\n\tsuccess(data) {\r\n\t\tconst d = JSON.parse(data);\r\n\t\tconst cards = this.state.cards.slice().concat(d);\r\n\t\tthis.setState({cards});\r\n\t}\r\n\t\r\n\tfailure(data) {\r\n\t\tconsole.error('err', data);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst cardList = this.state.cards.map(toCard);\r\n\t\treturn (\r\n\t\t\t<div className={`card-list${this.props.classNames ? ' ' + this.props.classNames : ''}`}>\r\n\t\t\t\t{cardList}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CardList;\r\nexport { CardListAsync };","import React, { Component } from 'react';\r\nimport CardPileBtn from '../../atoms/CardPileBtn';\r\nimport Overlay from '../../molecules/Overlay';\r\nimport CardList from '../../molecules/CardList';\r\nimport './PlotDeck.css';\r\n\r\nclass PlotDeck extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tconsole.log('p constructor', props);\r\n\t\tthis.state = {\r\n\t\t\tisFullscreen: false\r\n\t\t};\r\n\t\tthis.handleCardOnClick = this.handleCardOnClick.bind(this);\r\n\t\tthis.handleToggleFullscreen = this.handleToggleFullscreen.bind(this);\r\n\t}\r\n\t\r\n\thandleToggleFullscreen() {\r\n\t\tthis.setState({isFullscreen: !this.state.isFullscreen});\r\n\t}\r\n\t\r\n\thandleCardOnClick(c) {\r\n\t\tconsole.log('clicked card', c);\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"board-area plot-deck\">\r\n\t\t\t\t{this.state.isFullscreen ? (\r\n\t\t\t\t\t<Overlay>\r\n\t\t\t\t\t\t<div className=\"card-list-container\">\r\n\t\t\t\t\t\t\t<CardList cards={this.props.cards} onClick={this.handleCardOnClick}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Overlay>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<CardPileBtn onClick={this.handleToggleFullscreen}/>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default PlotDeck;","import React, { Component } from 'react';\r\nimport './BoardArea.css';\r\n\r\nclass BoardArea extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisFullscreen: false\r\n\t\t};\r\n\t\tthis.handleFullscreenToggle = this.handleFullscreenToggle.bind(this);\r\n\t}\r\n\t\r\n\thandleFullscreenToggle() {\r\n\t\tthis.setState({isFullscreen: !this.state.isFullscreen});\r\n\t}\r\n\t\r\n\trender() {\r\n\t\t// console.log('render <BoardArea>', this.props);\r\n\t\treturn (\r\n\t\t\t<div className={`board-area ${this.props.label.split(' ').join('-')}`}>\r\n\t\t\t\t<p>{this.props.label}</p>\r\n\t\t\t\t<div id=\"expand-btn-div\">\r\n\t\t\t\t\t<button onClick={this.handleFullscreenToggle}>full scr</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{this.props.children}\r\n\t\t\t\t</div>\r\n\t\t\t\t{this.state.isFullscreen &&\r\n\t\t\t\t\t<div className=\"overlay\">\r\n\t\t\t\t\t\t<div id=\"close-btn-div\">\r\n\t\t\t\t\t\t\t<button onClick={this.handleFullscreenToggle}>dismiss</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default BoardArea;","import React, { Component } from 'react';\r\nimport HUD from '../../molecules/HUD';\r\nimport PlotDeck from '../../organisms/PlotDeck';\r\n// import PlotDeckUsed from '../../organisms/PlotDeckUsed';\r\nimport CardList from '../../molecules/CardList';\r\nimport BoardArea from '../../organisms/BoardArea';\r\nimport './GameBoard.css';\r\n\r\nclass CharacterArea extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\t\r\n\t\t};\r\n\t\tthis.handleCardOnClick = this.handleCardOnClick.bind(this);\r\n\t}\r\n\t\r\n\thandleCardOnClick(c) {\r\n\t\tconsole.log('card clicked in CharacterArea', c);\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"board-area character-area\">\r\n\t\t\t\t<CardList cards={this.props.cards} onClick={this.handleCardOnClick}/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nclass GameBoard extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"game-board\">\r\n\t\t\t\t<HUD/>\r\n\t\t\t\t<PlotDeck cards={this.props.deck.plotCards.active}/>\r\n\t\t\t\t<CharacterArea cards={this.props.deck.inPlay.characters}/>\r\n\t\t\t\t<BoardArea label=\"locations\">\r\n\t\t\t\t\t<CardList expanded cards={this.props.deck.inPlay.locations}/>\r\n\t\t\t\t</BoardArea>\r\n\t\t\t\t<BoardArea label=\"hand\">\r\n\t\t\t\t\t<CardList cards={this.props.deck.currentHand}/>\r\n\t\t\t\t</BoardArea>\r\n\t\t\t\t<BoardArea label=\"faction card\">\r\n\t\t\t\t\t<CardList singular cards={this.props.deck.factionCard}/>\r\n\t\t\t\t</BoardArea>\r\n\t\t\t\t<BoardArea label=\"draw deck\">\r\n\t\t\t\t\t<CardList cards={this.props.deck.currentDrawDeck}/>\r\n\t\t\t\t</BoardArea>\r\n\t\t\t\t<BoardArea label=\"discard pile\">\r\n\t\t\t\t\t<CardList cards={this.props.deck.currentDiscardPile}/>\r\n\t\t\t\t</BoardArea>\r\n\t\t\t\t<BoardArea label=\"dead pile\">\r\n\t\t\t\t\t<CardList cards={this.props.deck.currentDeadPile}/>\r\n\t\t\t\t</BoardArea>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default GameBoard;","import React, { Component } from 'react';\r\nimport Page from '../../molecules/Page';\r\nimport GameBoard from '../../organisms/GameBoard';\r\nimport './Play.css';\r\n\r\nclass Play extends Component {\r\n\trender() {\r\n\t\tconsole.log('render <Play>');\r\n\t\tconsole.log(this.props);\r\n\t\treturn (\r\n\t\t\t<Page title=\"Play\">\r\n\t\t\t\t<GameBoard deck={this.props.deck}/>\r\n\t\t\t</Page>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Play;","import React from 'react';\nimport { BrowserRouter as Router, HashRouter, Switch, Route } from 'react-router-dom';\nimport getFromAPI from './utils/getFromAPI';\nimport Root from './components/pages/Root';\nimport Play from './components/pages/Play';\nimport './App.css';\n\nconst withHashRouter = (routes) => (\n\t<HashRouter>\n\t\t{routes}\n\t</HashRouter>\n);\n\nconst withBrowserRouter = (routes) => (\n\t<Router>\n\t\t{routes}\n\t</Router>\n);\n\nconst App = () => {\n\tconst cards = getFromAPI({type: 'cards', id: 0});\n\tconst routes = (\n\t\t<Switch>\n\t\t\t<Route\n\t\t\t\texact\n\t\t\t\tpath=\"/\"\n\t\t\t\trender={(props) => <Root {...props}/>}\n\t\t\t/>\n\t\t\t<Route\n\t\t\t\tpath=\"/play\"\n\t\t\t\trender={(props) => <Play deck={cards} {...props}/>}\n\t\t\t/>\n\t\t</Switch>\n\t);\n\tif (window.location.href.indexOf('github.io') > -1) return withHashRouter(routes);\n\telse return withBrowserRouter(routes);\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();"],"sourceRoot":""}