{"version":3,"sources":["media/factions/baratheon-faction.jpg","media/factions/tyrell-faction.jpg","media/factions/targaryen-faction.jpg","media/factions/stark-faction.jpg","media/factions/nights-watch-faction.jpg","media/factions/martell-faction.jpg","media/factions/lannister-faction.jpg","media/factions/greyjoy-faction.jpg","media/card-back.png","components/atoms/NavLink/index.js","components/atoms/NavBg/index.js","components/molecules/Nav/index.js","components/atoms/Button/index.js","components/pages/Splash/index.js","components/molecules/Page/index.js","components/atoms/SearchInput/index.js","components/atoms/NoResults/index.js","components/atoms/UiCard/index.js","helpers/factionCardImages.js","components/molecules/DeckUiCard/index.js","helpers/cardCache.js","helpers/getUniqueKey.js","helpers/apiHelpers.js","helpers/getItems.js","components/pages/Get/GetRoot/index.js","components/atoms/Loading/index.js","components/pages/Get/GetDecks/index.js","components/pages/Get/GetCards/index.js","components/pages/Get/index.js","components/organisms/HUD/index.js","components/atoms/CardImg/index.js","components/atoms/Card/index.js","components/organisms/FactionArea/index.js","components/molecules/ContextMenu/index.js","helpers/constants/cardTypeConstants.js","helpers/cardFocusOptions.js","components/organisms/OptionsContainer/index.js","components/atoms/NoCards/index.js","components/organisms/InPlayArea/index.js","components/organisms/CharacterArea/index.js","components/organisms/LocationArea/index.js","components/molecules/CardFocus/index.js","components/organisms/InnerModal/index.js","components/organisms/PlotArea/index.js","components/organisms/PlotDiscardArea/index.js","components/organisms/DrawPileArea/index.js","components/organisms/OutOfPlayArea/index.js","components/organisms/DiscardArea/index.js","components/organisms/DeadArea/index.js","components/organisms/Hand/index.js","components/atoms/ToggleShowButton/index.js","components/molecules/Modal/index.js","components/organisms/GameBoard/index.js","components/organisms/GameSetup/index.js","helpers/shuffle.js","helpers/getNewGameState.js","components/pages/Play/index.js","components/pages/My/MyRoot/index.js","components/pages/My/MyDecks/index.js","components/pages/My/MyCards/index.js","components/pages/My/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NavLink","props","toLabel","to","replace","labelText","slice","toUpperCase","concat","react_default","a","createElement","className","react_router_dom","NavBg","react","Nav","navLinks","map","l","atoms_NavLink","Object","assign","key","atoms_NavBg","Button","style","id","children","title","onClick","onPress","Splash","atoms_Button","Page","useEffect","window","scrollTo","top","behavior","SearchInput","type","value","onChange","handleOnChange","NoResults","UiCard","factionCardImages","baratheon","baratheonFaction","tyrell","tyrellFaction","targaryen","targaryenFaction","stark","starkFaction","thenightswatch","nightsWatchFaction","martell","martellFaction","lannister","lannisterFaction","greyjoy","greyjoyFaction","DeckUiCard","_props$deck","deck","name","description_md","atoms_UiCard","src","faction_code","alt","storageProvider","localStorage","userCache","add","stringifiedValue","JSON","stringify","setItem","save","saveListType","initSaveList","parse","getItem","updatedSavelist","flat","filter","k","get","scope","getType","localGet","lId","keys","indexOf","parsedKey","kId","clear","remove","getUniqueKey","keyMemo","newKey","Math","random","push","reqAPI","_ref","arguments","length","undefined","_ref$scope","_ref$format","format","reqUrl","Promise","resolve","reject","xhttp","XMLHttpRequest","onreadystatechange","this","readyState","status","responseText","open","setRequestHeader","location","origin","send","constructCardObj","card","parsedCard","cardKey","getCardFromAPI","cardId","then","cardObj","catch","err","console","error","getDeckFromAPI","deckId","deckObj","getCardLocal","getDeckLocal","getFromAPI","itemFromCache","dataObj","callback","parsedDeck","promiseList","slots","all","results","constructedResults","r","amt","code","Array","from","getCardsFromDeck","cards","constructedDeck","GetRoot","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","inputValue","searchResults","bind","assertThisInitialized","handleSearchInput","renderSearchResults","renderResult","e","setState","target","data","result","log","hasOwnProperty","match","url","molecules_DeckUiCard","memo","isInMemo","renderResults","recentlySearched","molecules_Page","atoms_SearchInput","atoms_NoResults","Component","Loading","GetDecks","_useState","useState","params","_useState2","slicedToArray","setDeck","cardCache","info","display","atoms_Loading","GetCards","Get","react_router","exact","path","component","HUD","tokenState","gold","initiative","claim","phase","handleRevert","CardImg","isBackside","cardBackside","Card","isLandscape","onContextMenu","atoms_CardImg","image_url","FactionArea","agendaCard","type_code","factionCard","c","focusCardKey","setFocusCardKey","atoms_Card","handleKneel","ContextMenu","containerRef","createRef","addEventListener","windowClickListener","current","contains","handleClose","removeEventListener","posStyle","pos","y","left","x","ref","options","opt","CONTEXT_TYPES","CHARACTER","LOCATION","HAND","DISCARD","PLOT","PLOT_DISCARD","DRAW_AREA","FACTION_AREA","DEAD_AREA","PHASE_TYPES","SETUP","DRAW","MARSHAL","CHALLENGES","DOMINATION","TAXATION","STANDING","allWithoutSetup","CARD_TYPES","EVENT","ATTACHMENT","FACTION","cardFocusOptions","label","availableCards","availablePhases","availableContext","OptionsContainer","showAttachmentOptions","setShowAttachmentOptions","context","handleCardMove","handleDismiss","handlerTypeCode","faction","plot","hand","character","event","plotDiscard","discard","dead","availableOptions","tryHandleDismiss","basicMove","handlers","marshal","put into play","play","kneel","kill","choose plot","NoCards","InPlayArea","contextMenuPos","toggleShowContextMenu","_useState3","_useState4","focusCard","setFocusCard","preventDefault","clientX","clientY","setContextMenuPos","area","gridStyle","gridTemplateColumns","atoms_NoCards","molecules_ContextMenu","organisms_OptionsContainer","targetArea","CharacterArea","organisms_InPlayArea","LocationArea","CardFocus","InnerModal","modalFocusedCard","setisModalFocused","toggleModalFocus","molecules_CardFocus","handleModalDismiss","PlotArea","plotAreaInner","organisms_InnerModal","handleModalToggle","PlotDiscardArea","DrawPile","handleDraw","OutOfPlayArea","areaReplace","outOfPlayInner","DiscardArea","organisms_OutOfPlayArea","DeadArea","HandInner","Hand","handInner","Hand_HandInner","i","ToggleShowButton","displayArrow","isLeft","isShowing","right","Modal","GameBoard","modalChildren","setModalChildren","isLefthandShowing","setIsLefthandShowing","_useState5","_useState6","isRighthandShowing","setIsRighthandShowing","moveCardTo","fromArea","test","handleGameStateUpdate","moveTokenTo","token","fromSource","kneelToggle","cardStatus","handleToggle","dir","gameBoardGridStyle","organisms_HUD","gameState","organisms_PlotDiscardArea","plotDiscardArea","organisms_PlotArea","plotArea","atoms_ToggleShowButton","organisms_CharacterArea","characterArea","handleTokenMove","organisms_LocationArea","locationArea","organisms_FactionArea","factionArea","organisms_DiscardArea","discardArea","organisms_DeadArea","deadArea","organisms_Hand","DrawPileArea","drawPileArea","drawAmt","molecules_Modal","GameSetup","decks","handleSelectDeck","shuffle","arr","randomIndex","floor","getNewGameState","updatedFromList","updatedTargetList","defineProperty","updatedCardStatus","updatedCardObj","drawCards","updatedDrawPileArea","updatedParams","factions","Play","gameStates","setGameState","gameStateTemplate","getCurrentGameState","organisms_GameSetup","isAgenda","isPlot","power","shuffledDrawDeck","autoSetupHand","initGameStateProps","initGameState","organisms_GameBoard","updatedState","MyRoot","MyDecks","MyCards","My","withContainer","routes","isGhPages","href","withHashRouter","withBrowserRouter","App","molecules_Nav","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b40e6938.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/baratheon-faction.f747f280.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tyrell-faction.dd85fbc0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/targaryen-faction.fb754a61.jpg\";","module.exports = __webpack_public_path__ + \"static/media/stark-faction.108159c3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nights-watch-faction.eacde39a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/martell-faction.c3db4ae8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lannister-faction.e6651acc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/greyjoy-faction.7736e9f8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/card-back.0c56143c.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavLink.css';\r\n\r\nconst NavLink = (props) => {\r\n    const toLabel = props.to.replace(/\\//g, '');\r\n    const labelText = toLabel.slice(0,1).toUpperCase().concat(toLabel.slice(1));\r\n    return (\r\n        <div className=\"nav-btn-container hover-float\">\r\n            <Link className=\"nav-btn\" to={props.to}>\r\n                <div className=\"light\">{labelText}</div>\r\n            </Link>\r\n            <div className=\"nav-bg-screen\"></div>\r\n            <div className=\"nav-btn-bg\">\r\n                <div className=\"side-left\"></div>\r\n                <div className=\"center\"></div>\r\n                <div className=\"side-right\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavLink;","import React, { Fragment } from 'react'\r\nimport './NavBg.css';\r\n\r\nconst NavBg = () => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"nav-bg-screen\"></div>\r\n            <div className=\"nav-bg-container\">\r\n                <div className=\"nav-bg-row\">\r\n                    <div className=\"nav-bg-col corner-left-top\"></div>\r\n                    <div className=\"nav-bg-col side-top\"></div>\r\n                    <div className=\"nav-bg-col corner-right-top\"></div>\r\n                </div>\r\n                <div className=\"nav-bg-row\">\r\n                    <div className=\"nav-bg-col side-left\"></div>\r\n                    <div className=\"nav-bg-col center\"></div>\r\n                    <div className=\"nav-bg-col side-right\"></div>\r\n                </div>\r\n                <div className=\"nav-bg-row\">\r\n                    <div className=\"nav-bg-col corner-left-bottom\"></div>\r\n                    <div className=\"nav-bg-col side-bottom\"></div>\r\n                    <div className=\"nav-bg-col corner-right-bottom\"></div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default NavBg;","import React from 'react';\r\nimport NavLink from '../../atoms/NavLink';\r\nimport NavBg from '../../atoms/NavBg';\r\nimport './Nav.css';\r\n\r\nconst Nav = () => {\r\n    const links = [{\r\n        to: '/get'\r\n    }, {\r\n        to: '/play'\r\n    }, {\r\n        to: '/my'\r\n    }];\r\n    const navLinks = links.map(l => <NavLink key={l.to} {...l}/>);\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-controls-container\">\r\n                {navLinks}\r\n            </div>\r\n            <NavBg/>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Button.css';\r\n\r\nconst Button = (props) => {\r\n    const className = `btn hover-float${props.className ? ' '.concat(props.className) : ''}`;\r\n    const style = props.style ? props.style : {};\r\n    return props.to ? (\r\n        <Link\r\n            className={className}\r\n            style={style}\r\n            to={props.to}\r\n            id={props.id}\r\n        >\r\n            <div>{props.children ? props.children : <span className=\"light\">{props.title}</span>}</div>\r\n        </Link>\r\n    ) : (\r\n        <button\r\n            className={className}\r\n            style={style}\r\n            id={props.id}\r\n            onClick={props.onClick}\r\n            onPress={props.onPress}\r\n        >\r\n            {props.children ? props.children : <span className=\"light\">{props.title}</span>}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport Button from '../../atoms/Button';\r\nimport './Splash.css';\r\n\r\nconst Splash = (props) => {\r\n    return (\r\n        <div className=\"splash\">\r\n            <div className=\"splash-display\">\r\n                <header>\r\n                    <h1>A Game of Thrones LCG</h1>\r\n                    <h2>Deck player</h2>\r\n                </header>\r\n                <section>\r\n                    <Button to=\"/get\">Get decks and cards.</Button>\r\n                    <Button to=\"/play\">Play the game.</Button>\r\n                    <Button to=\"/my\">My decks and cards.</Button>\r\n                </section>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Splash;","import React, { useEffect } from 'react';\r\nimport './Page.css';\r\n\r\nconst Page = (props) => {\r\n\tuseEffect(() => {\r\n        window.scrollTo({top: 0, behavior: 'smooth'});\r\n\t}, []);\r\n\t\r\n\treturn (\r\n\t\t<div className={`page${props.className ? ' '.concat(props.className) : ''}`}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Page;","import React from 'react';\r\nimport './SearchInput.css';\r\n\r\nconst SearchInput = (props) => {\r\n    return (\r\n        <div className=\"search-input-container\">\r\n            <input\r\n                id={props.id}\r\n                type=\"text\"\r\n                value={props.value}\r\n                onChange={props.handleOnChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchInput;","import React from 'react';\r\n\r\nconst NoResults = () => {\r\n    return (\r\n        <div className=\"no-results\">\r\n            <h3>No results.</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoResults;","import React from 'react';\r\nimport './UiCard.css';\r\n\r\nconst UiCard = (props) => {\r\n    const baseClassName = 'ui-card';\r\n    const className = props.className ? baseClassName.concat(' ').concat(props.className) : baseClassName;\r\n    return (\r\n        <div\r\n            className={className}\r\n            onClick={props.onClick}\r\n            onPress={props.onPress}\r\n        >\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UiCard;","import baratheonFaction from '../media/factions/baratheon-faction.jpg';\r\nimport tyrellFaction from '../media/factions/tyrell-faction.jpg';\r\nimport targaryenFaction from '../media/factions/targaryen-faction.jpg';\r\nimport starkFaction from '../media/factions/stark-faction.jpg';\r\nimport nightsWatchFaction from '../media/factions/nights-watch-faction.jpg';\r\nimport martellFaction from '../media/factions/martell-faction.jpg';\r\nimport lannisterFaction from '../media/factions/lannister-faction.jpg';\r\nimport greyjoyFaction from '../media/factions/greyjoy-faction.jpg';\r\n\r\nconst factionCardImages = {\r\n\tbaratheon: baratheonFaction,\r\n\ttyrell: tyrellFaction,\r\n\ttargaryen: targaryenFaction,\r\n\tstark: starkFaction,\r\n\tthenightswatch: nightsWatchFaction,\r\n\tmartell: martellFaction,\r\n\tlannister: lannisterFaction,\r\n\tgreyjoy: greyjoyFaction\r\n}\r\n\r\nexport default factionCardImages;","import React from 'react';\r\nimport UiCard from '../../atoms/UiCard';\r\nimport './DeckUiCard.css';\r\nimport factionCardImages from '../../../helpers/factionCardImages';\r\n\r\nconst DeckUiCard = (props) => {\r\n    const { name, description_md } = props.deck;\r\n    const className = 'deck-ui-card-container'.concat(props.className ? ' '.concat(props.className) : '');\r\n    return (\r\n        <UiCard\r\n            className={className}\r\n            onClick={props.onClick}\r\n        >\r\n            <div className=\"deck-ui-card-header-left\">\r\n                <img src={factionCardImages[props.deck.faction_code]} alt=\"\"/>\r\n            </div>\r\n            <div className=\"deck-ui-card-metadata\">\r\n                <div className=\"deck-ui-card-title\">\r\n                    <h3>{name}</h3>\r\n                </div>\r\n                <div className=\"deck-ui-card-description\">\r\n                    <p>{description_md}</p>\r\n                </div>\r\n            </div>\r\n        </UiCard>\r\n    );\r\n}\r\n\r\nexport default DeckUiCard;","const storageProvider = window.localStorage;\r\n\r\nconst userCache = {\r\n    add: (type, id, value) => { //type = (decklist|card)\r\n        const stringifiedValue = typeof value === 'object' ? JSON.stringify(value) : value;\r\n        storageProvider.setItem(`${type}_${id}`, stringifiedValue);\r\n    },\r\n    save: (id, type) => {\r\n        const saveListType = `savelist_${type === 'decklist' ? 'deck' : type}`;\r\n        const initSaveList = JSON.parse(storageProvider.getItem(saveListType));\r\n        const updatedSavelist = []\r\n            .concat(initSaveList !== null ? initSaveList : [])\r\n            .flat()\r\n            .filter(k => k !== id)\r\n            .concat(id);\r\n        storageProvider.setItem(saveListType, JSON.stringify(updatedSavelist));\r\n    },\r\n    get: (type, id, scope) => {\r\n        const getType = type === 'savelist' ? 'decklist' : type;\r\n        const localGet = (lId) => JSON.parse(storageProvider.getItem(`${getType}_${lId}`));\r\n        if (!scope) return localGet(id);\r\n        else {\r\n            const keys = Object.keys(storageProvider).filter(k => k.indexOf(type) > -1);\r\n            if (type === 'savelist') {\r\n                const parsedKey = JSON.parse(storageProvider.getItem(keys[0]));\r\n                return parsedKey ? parsedKey.map(kId => localGet(kId)) : [];\r\n            }\r\n            else return keys.map(kId => JSON.parse(storageProvider.getItem(kId)));\r\n        }\r\n    },\r\n    clear: (id, scope) => {\r\n        if (!scope || scope !== 'all') storageProvider.remove(id);\r\n        else storageProvider.clear();\r\n    }\r\n}\r\n\r\nexport default userCache;","const getUniqueKey = (keyMemo) => {\r\n\tlet newKey = 100 * Math.random();\r\n\tif (keyMemo.indexOf(newKey) > -1) newKey = newKey * 2;\r\n\tkeyMemo.push(newKey);\r\n\treturn newKey;\r\n}\r\n\r\nexport default getUniqueKey;","//documentation --> https://thronesdb.com/api/doc\r\nimport getUniqueKey from './getUniqueKey';\r\n\r\nconst reqAPI = ({type, id, scope = 'public', format = '.json'} = {}) => {\r\n\tconst rootUrl = 'https://thronesdb.com/api';\r\n\tconst reqUrl = `${rootUrl}/${scope}/${type}/${id}${format}`;\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst xhttp = new XMLHttpRequest();\r\n\t\txhttp.onreadystatechange = function() {\r\n\t\t\tif (this.readyState === 4 && this.status === 200) resolve(this.responseText);\r\n\t\t};\r\n\t\t//add error handling using reject(err)\r\n\t\txhttp.open(\"GET\", reqUrl);\r\n\t\txhttp.setRequestHeader('Access-Control-Allow-Origin', window.location.origin);\r\n\t\txhttp.setRequestHeader('Content-Type', 'application/json');\r\n\t\txhttp.send();\r\n\t});\r\n};\r\n\r\nlet keyMemo = [\r\n\t-1 //reserved key for faction card\r\n];\r\n\r\nconst getCardParams = () => ({\r\n\tcardKey: getUniqueKey(keyMemo),\r\n\tstatus: 'standing'\r\n});\r\n\r\nconst constructCardObj = (card) => {\r\n\tconst parsedCard = typeof card === 'string' ? JSON.parse(card) : card;\r\n\t//console.log('constructCardObj', card.cardKey, parsedCard, getCardParams());\r\n\treturn Object.assign({}, parsedCard, getCardParams());\r\n}\r\n\r\nconst getCardFromAPI = (cardId) => reqAPI({type: 'card', id: cardId})\r\n\t.then(cardObj => constructCardObj(cardObj))\r\n\t.catch(err => console.error(`Error getting card from id ${cardId}`, err))\r\n\r\nconst getCardsFromDeck = (deckObj, callback) => {\r\n\tconst parsedDeck = typeof deckObj === 'string' ? JSON.parse(deckObj) : deckObj;\r\n\tconst promiseListkeys = Object\r\n\t\t.keys(parsedDeck.slots);\r\n\tconst promiseList = promiseListkeys\r\n\t\t.map(cardId => getCardFromAPI(cardId));\r\n\tPromise.all(promiseList)\r\n\t\t.then((results) => {\r\n\t\t\tconst constructedResults = results.map((r) => {\r\n\t\t\t\tconst amt = parsedDeck.slots[r.code];\r\n\t\t\t\treturn Array.from({ length: amt }, () => constructCardObj(r));\r\n\t\t\t});\r\n\t\t\tcallback(constructedResults.flat());\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\t//console.info('err @ getCardsFromDeck Promise.all')\r\n\t\t\tconsole.error(err);\r\n\t\t});\r\n}\r\n\r\nconst getDeckFromAPI = (deckId) => reqAPI({type: 'decklist', id: deckId})\r\n\t\t.then((deckObj) => JSON.parse(deckObj))\r\n\t\t.catch(err => {\r\n\t\t\t//console.info('err @ getDeckFromAPI');\r\n\t\t\tconsole.error(err);\r\n\t\t});\r\n\r\nexport default getDeckFromAPI;\r\nexport { getCardFromAPI, getCardsFromDeck };","import userCache from './cardCache';\r\nimport getDeckFromAPI, { getCardFromAPI, getCardsFromDeck } from './apiHelpers';\r\n\r\nconst getCardLocal = (cardId) => userCache.get('card', cardId);\r\nconst getAllCardsLocal = () => userCache.get('card', null, true);\r\nconst getDeckLocal = (deckId) => userCache.get('decklist', deckId);\r\nconst getAllDecksLocal = () => userCache.get('decklist', null, true);\r\n\r\nconst getItem = (type, id) => {\r\n    const itemFromCacheFn = type === 'card' ? getCardLocal : getDeckLocal;\r\n    const getFromAPI = type === 'card' ? getCardFromAPI : getDeckFromAPI;\r\n    const itemFromCache = itemFromCacheFn(id);\r\n    return new Promise((resolve) => {\r\n        if (itemFromCache) resolve(itemFromCache);\r\n        else getFromAPI(id)\r\n            .then(dataObj => {\r\n                if (type === 'card') resolve(dataObj);\r\n                else {\r\n                    const resolveCards = (cards) => {\r\n                        let constructedDeck = Object.assign({}, dataObj, { cards });\r\n                        resolve(constructedDeck);\r\n                    };\r\n                    getCardsFromDeck(dataObj, resolveCards);\r\n                }\r\n            });\r\n    });\r\n}\r\n\r\nexport default getItem;\r\nexport { getDeckLocal, getAllDecksLocal, getCardLocal, getAllCardsLocal };","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Page from '../../../molecules/Page';\r\nimport SearchInput from '../../../atoms/SearchInput';\r\nimport Button from '../../../atoms/Button';\r\nimport NoResults from '../../../atoms/NoResults';\r\nimport DeckUiCard from '../../../molecules/DeckUiCard';\r\nimport { getAllDecksLocal } from '../../../../helpers/getItems';\r\nimport './GetRoot.css';\r\n\r\nclass GetRoot extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputValue: '',\r\n            searchResults: null\r\n        };\r\n        this.handleOnChange = this.handleOnChange.bind(this);\r\n        this.handleSearchInput = this.handleSearchInput.bind(this);\r\n        this.renderSearchResults = this.renderSearchResults.bind(this);\r\n        this.renderResult = this.renderResult.bind(this);\r\n    }\r\n\r\n    handleOnChange(e) {\r\n        this.setState({\r\n            inputValue: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSearchInput() {\r\n        //console.log(`searching for ${this.state.inputValue}`);\r\n        /*\r\n        - sanitize into thronesdb API-friendly query string\r\n        - display query string in search bar via setState\r\n        */\r\n    }\r\n\r\n    handleSearchReturned(data) {\r\n        //console.log('returned', typeof data, data);\r\n        this.setState({\r\n            searchResults: JSON.parse(data) //check specific level within return data for multiple decklists\r\n        });\r\n    }\r\n\r\n    renderResult(result) {\r\n        console.log('renderResult', result);\r\n        const type = result.hasOwnProperty('slots') || result.hasOwnProperty('cards') ? 'decks' : 'cards';\r\n        return (\r\n            <Link key={result.id} to={`${this.props.match.url}/${type}/${result.id}`}>\r\n                <DeckUiCard\r\n                    deck={result}\r\n                />\r\n            </Link>\r\n        );\r\n    }\r\n\r\n    renderResults(results) {\r\n        let memo = [];\r\n        return results\r\n            .filter((r) => {\r\n                const isInMemo = memo.indexOf(r.id) === -1;\r\n                memo.push(r.id);\r\n                return isInMemo;\r\n            })\r\n            .map(this.renderResult);\r\n    }\r\n\r\n    renderSearchResults(results) {\r\n        if (!results) return undefined;\r\n        const decks = results.filter(r => r.type === 'deck');\r\n        const cards = results.filter(r => r.type === 'card');\r\n        return [decks, cards].map(this.renderResults);\r\n    }\r\n\r\n    render() {\r\n        const results = this.renderSearchResults(this.state.searchResults);\r\n        const recentlySearched = this.renderResults(getAllDecksLocal());\r\n        return (\r\n            <Page className=\"get-root\">\r\n                <header>\r\n                    <h1>Get decks and cards</h1>\r\n                    <div className=\"search\">\r\n                        <SearchInput\r\n                            id=\"get-search-input\"\r\n                            value={this.state.inputValue}\r\n                            handleOnChange={this.handleOnChange}\r\n                        />\r\n                        <Button\r\n                            title=\"Search\"\r\n                            onClick={this.handleSearchInput}\r\n                        />\r\n                    </div>\r\n                </header>\r\n                <div className=\"search-results-container\">\r\n                    {(results && results.length > 0) ? results : <NoResults/>}\r\n                </div>\r\n                {recentlySearched && recentlySearched.length > 0 && (\r\n                    <div className=\"search-results-recent\">\r\n                        <h2>Recently searched decks</h2>\r\n                        <div className=\"deck-results-container\">\r\n                            {recentlySearched}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Page>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GetRoot;","import React from 'react';\r\nimport './Loading.css';\r\n\r\nconst Loading = () => (\r\n\t<div className=\"loading\">\r\n\t\t<h5><em>Loading...</em></h5>\r\n\t</div>\r\n);\r\n\r\nexport default Loading;","import React, { Fragment, useState, useEffect } from 'react';\r\nimport Page from '../../../molecules/Page';\r\nimport Loading from '../../../atoms/Loading';\r\nimport cardCache from '../../../../helpers/cardCache';\r\nimport getItem, { getDeckLocal } from '../../../../helpers/getItems';\r\nimport Button from '../../../atoms/Button';\r\n\r\nconst GetDecks = (props) => {\r\n    const [deck, setDeck] = useState(getDeckLocal(props.match.params.id));\r\n\r\n    //may remove this hook if deck can be set to a promise resolve() value above\r\n    useEffect(() => {\r\n        if (!deck) {\r\n            getItem('deck', props.match.params.id)\r\n                .then(deckObj => {\r\n                    cardCache.add('decklist', props.match.params.id, deckObj);\r\n                    setDeck(deckObj);\r\n                })\r\n                .catch(err => {\r\n                    console.info('err @ getDeck');\r\n                    console.error(err);\r\n                });\r\n        }\r\n    })\r\n\r\n    const display = deck ? (\r\n        <Fragment>\r\n            <header>\r\n                <h1>{deck.name}</h1>\r\n            </header>\r\n            <div className=\"get-deck-controls\">\r\n                <Button\r\n                    title=\"Save\"\r\n                    onClick={() => cardCache.save(deck.id, 'decklist')}\r\n                />\r\n            </div>\r\n            <div className=\"get-deck-metadata\">\r\n\r\n            </div>\r\n            <div className=\"get-deck-cardlist\">\r\n                <div className=\"get-deck-cardlist-viewcontrols\">\r\n\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    ) : (\r\n        <Loading/>\r\n    );\r\n    return (\r\n        <Page className=\"get-decks\">\r\n            <div className=\"get-decks-title\">\r\n                <Button to=\"/get\">&larr;</Button>\r\n            </div>\r\n            <div className=\"get-decks-display\">\r\n                {display}\r\n            </div>\r\n        </Page>\r\n    );\r\n}\r\n\r\nexport default GetDecks;","import React from 'react';\r\nimport Page from '../../../molecules/Page';\r\n\r\nconst GetCards = (props) => {\r\n    console.log('GetCards', props);\r\n    return (\r\n        <Page className=\"get-cards\">\r\n\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default GetCards;","import React, { Fragment } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport GetRoot from './GetRoot';\r\nimport GetDecks from './GetDecks';\r\nimport GetCards from './GetCards';\r\n\r\nconst Get = ({match}) => {\r\n    return (\r\n        <Fragment>\r\n            <Route\r\n                exact\r\n                path={match.url}\r\n                component={GetRoot}\r\n            />\r\n            <Route\r\n                path={`${match.url}/decks/:id`}\r\n                component={GetDecks}\r\n            />\r\n            <Route\r\n                path={`${match.url}/cards/:id`}\r\n                component={GetCards}\r\n            />\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Get;","import React/*, { useState }*/ from 'react';\r\nimport Button from '../../atoms/Button';\r\nimport './HUD.css';\r\n\r\n/*\r\nideas to extend:\r\n- Allow a user-set modifier. E.g., if a plot card lowers your gold value, user can set -1 modifier in HUD\r\n- may need to hoist these values to GameBoard\r\n*/\r\n\r\nconst HUD = (props) => {\r\n    return (\r\n        <div className=\"hud-display-container\">\r\n            <div className=\"hud-tokens-container\">\r\n                <div className=\"hud-gold\">\r\n                    {props.tokenState.gold}\r\n                </div>\r\n                <div className=\"hud-initiative\">\r\n                    {props.tokenState.initiative ? props.tokenState.initiative : '-'}\r\n                </div>\r\n                <div className=\"hud-claim\">\r\n                    {props.tokenState.claim ? props.tokenState.claim : '-'}\r\n                </div>\r\n            </div>\r\n            <div className=\"hud-phase-container\">\r\n                <div>{props.phase}</div>\r\n            </div>\r\n            <div className=\"hud-admin-controls\">\r\n                <Button\r\n                    title=\"Revert\"\r\n                    onClick={props.handleRevert}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HUD;","import React from 'react';\r\nimport cardBackside from '../../../media/card-back.png';\r\nimport './CardImg.css';\r\n\r\nconst CardImg = (props) => {\r\n\treturn (\r\n\t\t<div className=\"card-img\">\r\n\t\t\t<img src={props.isBackside ? cardBackside : props.src} alt=\"\"/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardImg;","import React from 'react';\r\nimport cardBackside from '../../../media/card-back.png';\r\nimport CardImg from '../CardImg';\r\nimport './Card.css';\r\n\r\n/*\r\nimplementations of Card\r\n- .portrait\r\n- .landscape\r\n- .backside.portrait (DrawDeck, setup cards, duplicate cards,)\r\n- .backside.landscape (PlotArea)\r\n- .portrait.knelt\r\n*/\r\n\r\nconst Card = (props) => {\r\n\tconst className = `card${props.card ? ' '.concat(props.card.status) : ''} ${props.isLandscape ? 'landscape' : 'portrait'}${props.isBackside ? ' backside' : ''}${props.className ? ' '.concat(props.className) : ''}`\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={className}\r\n\t\t\tonClick={props.onClick}\r\n\t\t\tonPress={props.onPress}\r\n\t\t\tonContextMenu={props.onContextMenu}\r\n\t\t>\r\n\t\t\t<CardImg\r\n\t\t\t\tsrc={props.isBackside ? cardBackside : props.card.image_url}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React, { useState } from 'react';\r\nimport Card from '../../atoms/Card';\r\nimport './FactionArea.css';\r\n\r\nconst FactionArea = (props) => {\r\n    const agendaCard = props.cards.filter(card => card.type_code === 'agenda')[0];\r\n    const factionCard = props.cards.filter(c => c.type_code === 'faction')[0];\r\n\r\n    const [focusCardKey, setFocusCardKey] = useState(agendaCard ? agendaCard.cardKey : factionCard.cardKey);\r\n\r\n    return (\r\n        <div className=\"faction-area\">\r\n            <div className=\"border\" id=\"Agenda\">\r\n                {agendaCard && (\r\n                    <div onClick={() => setFocusCardKey(agendaCard.cardKey)} className={`agenda-card${focusCardKey === agendaCard.cardKey ? ' focus' : ''}`}>\r\n                        <Card\r\n                            card={agendaCard}\r\n                        />\r\n                    </div>\r\n                )}\r\n                <div\r\n                    onClick={() => props.handleKneel(factionCard, 'factionArea')}\r\n                    className={`faction-card${focusCardKey === factionCard.cardKey ? ' focus' : ''}`}\r\n                >\r\n                    <Card\r\n                        card={factionCard}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FactionArea;","import React, { useEffect, createRef } from 'react';\r\nimport './ContextMenu.css';\r\n\r\nconst ContextMenu = (props) => {\r\n    const containerRef = createRef();\r\n\r\n    useEffect(() => {\r\n        const windowClickListener = (e) => {\r\n            if (!containerRef.current) {\r\n                window.removeEventListener('window', windowClickListener);\r\n                return;\r\n            }\r\n            if (!containerRef.current.contains(e.target)) props.handleClose();\r\n        }\r\n        window.addEventListener('click', windowClickListener);\r\n    }, [containerRef, props]);\r\n\r\n    const posStyle = {\r\n        top: props.pos.y,\r\n        left: props.pos.x\r\n    };\r\n    return (\r\n        <div ref={containerRef} className=\"context-menu-container\" style={posStyle}>\r\n            <div className=\"context-menu\">\r\n                {props.options ? props.options.map(opt => (\r\n                    <div key={opt} className=\"context-menu-option\">\r\n                        {opt}\r\n                    </div>\r\n                )) : props.children\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContextMenu;","const CARD_TYPES = {\r\n    CHARACTER: 'character',\r\n    LOCATION: 'location',\r\n    EVENT: 'event',\r\n    ATTACHMENT: 'attachment',\r\n    PLOT: 'plot',\r\n    FACTION: 'faction',\r\n\r\n    get all() {\r\n        return [\r\n            this.CHARACTER,\r\n            this.LOCATION,\r\n            this.EVENT,\r\n            this.ATTACHMENT,\r\n            this.PLOT,\r\n            this.FACTION\r\n        ];\r\n    }\r\n}\r\n\r\nconst CONTEXT_TYPES = {\r\n    CHARACTER: 'character',\r\n    LOCATION: 'location',\r\n    HAND: 'hand',\r\n    DISCARD: 'discard', //confirm - may be discardArea (try to flatten these issues)\r\n    PLOT: 'plot',\r\n    PLOT_DISCARD: 'plotDiscard',\r\n    DRAW_AREA: 'drawPileArea', //no idea - hasn't been implemented yet\r\n    FACTION_AREA: 'factionArea', //confirm\r\n    DEAD_AREA: 'dead', //confirm\r\n\r\n    get all() {\r\n        return [\r\n            this.CHARACTER,\r\n            this.LOCATION,\r\n            this.HAND,\r\n            this.DISCARD,\r\n            this.PLOT,\r\n            this.PLOT_DISCARD,\r\n            this.DRAW_AREA,\r\n            this.FACTION_AREA,\r\n            this.DEAD_AREA\r\n        ]\r\n    }\r\n}\r\n\r\nconst PHASE_TYPES = {\r\n    SETUP: 'setup',\r\n    PLOT: 'plot',\r\n    DRAW: 'draw',\r\n    MARSHAL: 'marshal',\r\n    CHALLENGES: 'challenges',\r\n    DOMINATION: 'domination',\r\n    TAXATION: 'taxation',\r\n    STANDING: 'standing',\r\n\r\n    get all() {\r\n        return [\r\n            this.SETUP,\r\n            this.PLOT,\r\n            this.DRAW,\r\n            this.MARSHAL,\r\n            this.CHALLENGES,\r\n            this.DOMINATION,\r\n            this.TAXATION,\r\n            this.STANDING\r\n        ];\r\n    },\r\n\r\n    get allWithoutSetup() {\r\n        return this.all.filter(phase => phase !== this.SETUP);\r\n    }\r\n}\r\n\r\nexport default CARD_TYPES;\r\nexport { PHASE_TYPES, CONTEXT_TYPES };","import CARD_TYPES, { PHASE_TYPES, CONTEXT_TYPES } from './constants/cardTypeConstants';\r\n\r\nconst cardFocusOptions = [\r\n    {\r\n        label: 'marshal',\r\n        availableCards: [\r\n            CARD_TYPES.CHARACTER,\r\n            CARD_TYPES.LOCATION,\r\n            CARD_TYPES.ATTACHMENT\r\n        ],\r\n        availablePhases: [\r\n            PHASE_TYPES.MARSHAL\r\n        ],\r\n        availableContext: [\r\n            CONTEXT_TYPES.HAND\r\n        ]\r\n    },\r\n    {\r\n        label: 'put into play',\r\n        availableCards: [\r\n            CARD_TYPES.CHARACTER,\r\n            CARD_TYPES.LOCATION\r\n        ],\r\n        availablePhases: [\r\n            PHASE_TYPES.SETUP,\r\n            PHASE_TYPES.CHALLENGES,\r\n            PHASE_TYPES.DOMINATION\r\n        ],\r\n        availableContext: [\r\n            CONTEXT_TYPES.HAND,\r\n            CONTEXT_TYPES.DISCARD,\r\n            CONTEXT_TYPES.DEAD_AREA\r\n        ]\r\n    },\r\n    {\r\n        label: 'play',\r\n        availableCards: [\r\n            CARD_TYPES.EVENT\r\n        ],\r\n        availablePhases: [\r\n            PHASE_TYPES.allWithoutSetup\r\n        ],\r\n        availableContext: [\r\n            CONTEXT_TYPES.HAND\r\n        ]\r\n    },\r\n    {\r\n        label: 'play from discard',\r\n        availableCards: [\r\n            CARD_TYPES.EVENT\r\n        ],\r\n        availablePhases: [\r\n            PHASE_TYPES.allWithoutSetup\r\n        ],\r\n        availableContext: [\r\n            CONTEXT_TYPES.DISCARD\r\n        ]\r\n    },\r\n    {\r\n        label: 'discard',\r\n        availableCards: [\r\n            CARD_TYPES.CHARACTER,\r\n            CARD_TYPES.LOCATION,\r\n            CARD_TYPES.ATTACHMENT,\r\n            CARD_TYPES.EVENT\r\n        ],\r\n        availablePhases: [\r\n            PHASE_TYPES.allWithoutSetup\r\n        ],\r\n        availableContext: [\r\n            CONTEXT_TYPES.HAND\r\n        ]\r\n    },\r\n    {\r\n        label: 'kneel',\r\n        availableCards: [\r\n            CARD_TYPES.CHARACTER,\r\n            CARD_TYPES.LOCATION\r\n        ],\r\n        availablePhases: [\r\n            PHASE_TYPES.allWithoutSetup\r\n        ],\r\n        availableContext: [\r\n            CONTEXT_TYPES.CHARACTER,\r\n            CONTEXT_TYPES.LOCATION\r\n        ]\r\n    },\r\n    {\r\n        label: 'kill',\r\n        availableCards: [\r\n            CARD_TYPES.CHARACTER\r\n        ],\r\n        availablePhases: [\r\n            PHASE_TYPES.allWithoutSetup\r\n        ],\r\n        availableContext: [\r\n            CONTEXT_TYPES.CHARACTER\r\n        ]\r\n    },\r\n    {\r\n        label: 'choose plot',\r\n        availableCards: [\r\n            CARD_TYPES.PLOT\r\n        ],\r\n        availablePhases: [\r\n            PHASE_TYPES.PLOT\r\n        ],\r\n        availableContext: [\r\n            CONTEXT_TYPES.PLOT\r\n        ]\r\n    },\r\n    {\r\n        label: 'return to plot pile',\r\n        availableCards: [\r\n            CARD_TYPES.PLOT\r\n        ],\r\n        availableContext: [\r\n            CONTEXT_TYPES.PLOT_DISCARD\r\n        ],\r\n        availablePhases: [\r\n            PHASE_TYPES.all\r\n        ]\r\n    },\r\n    {\r\n        label: 'ambush',\r\n        availableCards: [\r\n            CARD_TYPES.CHARACTER,\r\n            CARD_TYPES.LOCATION\r\n        ],\r\n        availablePhases: [\r\n            PHASE_TYPES.CHALLENGES\r\n        ],\r\n        availableContext: [\r\n            CONTEXT_TYPES.HAND\r\n        ]\r\n    }\r\n];\r\n\r\nexport default cardFocusOptions;","import React, { useState } from 'react';\r\nimport Button from '../../atoms/Button';\r\nimport cardFocusOptions from '../../../helpers/cardFocusOptions';\r\nimport './OptionsContainer.css';\r\n\r\nconst OptionsContainer = (props) => {\r\n    const [showAttachmentOptions, setShowAttachmentOptions] = useState(false);\r\n\r\n    const { card, context, handleCardMove, handleKneel, handleDismiss } = props;\r\n    //const inCurrentPhase = (opt) => opt.availablePhases.indexOf(props.phase) > -1;\r\n    const inAvailableCards = (opt) => opt.availableCards.indexOf(card.type_code) > -1;\r\n    const inAvailableContext = (opt) => opt.availableContext.indexOf(context) > -1;\r\n    const typeCodeMap = {\r\n        'faction' : 'factionArea',\r\n        'deck' : 'drawPileArea',\r\n        'plot' : 'plotArea',\r\n        'hand' : 'hand',\r\n        'character' : 'characterArea',\r\n        'location' : 'locationArea',\r\n        //'attachment': 'attachment',\r\n        'event': 'discardArea',\r\n        'plotDiscard' : 'plotDiscardArea',\r\n        'discard' : 'discardArea',\r\n        'dead' : 'deadArea'\r\n    };\r\n    const handlerTypeCode = typeCodeMap[card.type_code];\r\n    const availableOptions = cardFocusOptions\r\n        //.filter(inCurrentPhase)\r\n        .filter(inAvailableCards)\r\n        .filter(inAvailableContext);\r\n    const tryHandleDismiss = () => {\r\n        if (handleDismiss) handleDismiss();\r\n    }\r\n    const basicMove = () => {\r\n        handleCardMove(handlerTypeCode);\r\n        tryHandleDismiss();\r\n    }\r\n    const kneelWrapper = () => {\r\n        handleKneel(card);\r\n        tryHandleDismiss();\r\n    }\r\n    const discardWrapper = () => {\r\n        handleCardMove('discardArea');\r\n        tryHandleDismiss();\r\n    }\r\n    const killWrapper = () => {\r\n        handleCardMove('deadArea');\r\n        tryHandleDismiss();\r\n    }\r\n    const choosePlotWrapper = () => {\r\n        //console.log('choose plot wrapper');\r\n        handleCardMove('plotDiscardArea');\r\n        tryHandleDismiss();\r\n    }\r\n    const handlers = {\r\n        'marshal': basicMove,\r\n        'put into play': basicMove,\r\n        'play': basicMove,\r\n        'discard': discardWrapper,\r\n        'kneel': kneelWrapper,\r\n        'kill': killWrapper,\r\n        'choose plot': choosePlotWrapper\r\n    }\r\n    const NoOptions = () => (\r\n        <div>\r\n            <p>Can't take any action on this card right now.</p>\r\n        </div>\r\n    );\r\n    const AttachmentOptions = () => {\r\n        return (\r\n            <div className=\"options-attachment-container\">\r\n\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <div className=\"card-focus-controls\">\r\n            {availableOptions.length && availableOptions.length > 0 ? availableOptions.map(opt => (\r\n                <Button\r\n                    key={opt.label}\r\n                    title={opt.label}\r\n                    onClick={card.type_code === 'attachment' ? () => setShowAttachmentOptions(true) : handlers[opt.label]}\r\n                />\r\n            )) : (\r\n                <NoOptions/>\r\n            )}\r\n            {showAttachmentOptions && (\r\n                <AttachmentOptions/>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OptionsContainer;","import React from 'react';\r\nimport './NoCards.css';\r\n\r\nconst NoCards = ({isLandscape}) => {\r\n    return (\r\n        <div className={`no-cards${isLandscape ? ' landscape' : ''}`}>\r\n            <div id=\"no-cards-inner-container\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NoCards;","import React, { useState } from 'react';\r\nimport Card from '../../atoms/Card';\r\nimport ContextMenu from '../../molecules/ContextMenu';\r\nimport OptionsContainer from '../OptionsContainer';\r\nimport NoCards from '../../atoms/NoCards';\r\n\r\nconst InPlayArea = (props) => {\r\n    const [contextMenuPos, toggleShowContextMenu] = useState(null);\r\n    const [focusCard, setFocusCard] = useState(null);\r\n\r\n    const handleCardMove = (targetArea) => {\r\n        props.handleCardMove(focusCard, props.area, targetArea);\r\n        setFocusCard(null);\r\n    }\r\n    const setContextMenuPos = (e, card) => {\r\n        e.preventDefault();\r\n        if (!contextMenuPos) {\r\n            toggleShowContextMenu({x: e.clientX, y: e.clientY});\r\n            setFocusCard(card);\r\n        }\r\n    }\r\n    const cards = props.cards && props.cards.map(card => (\r\n        <div key={card.cardKey} className=\"card-inplay-slot\">\r\n            <Card\r\n                card={card}\r\n                onContextMenu={(e) => setContextMenuPos(e, card)}\r\n                onClick={() => props.handleKneel(card, props.area)}\r\n                className=\"hover-rotate\"\r\n            />\r\n        </div>\r\n    ));\r\n    const colWidth = '12em';\r\n    const gridStyle = {gridTemplateColumns: `repeat(${props.cards.length}, ${colWidth})`};\r\n    return (\r\n        <div className={`${props.area.replace(/Area/g, '')}-area`}>\r\n            <div className=\"border\" id={`${props.area.slice(0, 1).toUpperCase().concat(props.area.replace(/Area/g, '').slice(1))}s(${props.cards.length})`} style={gridStyle}>\r\n                {cards && cards.length > 0 ? cards : <NoCards/>}\r\n            </div>\r\n            {contextMenuPos && (\r\n                <ContextMenu\r\n                    pos={contextMenuPos}\r\n                    handleClose={() => toggleShowContextMenu(null)}\r\n                >\r\n                    <OptionsContainer\r\n                        card={focusCard}\r\n                        context={props.area.replace(/Area/g, '')}\r\n                        handleCardMove={handleCardMove}\r\n                        handleKneel={() => props.handleKneel(focusCard, props.area)}\r\n                        handleDismiss={() => toggleShowContextMenu(null)}\r\n                    />\r\n                </ContextMenu>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InPlayArea;","import React from 'react';\r\nimport InPlayArea from '../InPlayArea';\r\nimport './CharacterArea.css';\r\n\r\nconst CharacterArea = (props) => {\r\n    return (\r\n        <InPlayArea\r\n            area=\"characterArea\"\r\n            {...props}\r\n        />\r\n    );\r\n}\r\n\r\nexport default CharacterArea;","import React from 'react';\r\nimport InPlayArea from '../InPlayArea';\r\nimport './LocationArea.css';\r\n\r\nconst LocationArea = (props) => {\r\n    return (\r\n        <InPlayArea\r\n            area=\"locationArea\"\r\n            {...props}\r\n        />\r\n    );\r\n}\r\n\r\nexport default LocationArea;","import React from 'react';\r\nimport Button from '../../atoms/Button';\r\nimport Card from '../../atoms/Card';\r\nimport OptionsContainer from '../../organisms/OptionsContainer';\r\nimport './CardFocus.css';\r\n\r\nconst CardFocus = (props) => {\r\n    return (\r\n        <div className=\"card-focus\">\r\n            <Button onClick={props.handleDismiss}>&larr;</Button>\r\n            <div>\r\n                <Card\r\n                    card={props.card}\r\n                />\r\n                <OptionsContainer\r\n                    context={props.context}\r\n                    card={props.card}\r\n                    handleCardMove={props.handleCardMove}\r\n                    handleKneel={props.handleKneel}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardFocus;","import React, { useState } from 'react';\r\nimport CardFocus from '../../molecules/CardFocus';\r\nimport Card from '../../atoms/Card';\r\n\r\nconst InnerModal = (props) => {\r\n    const [modalFocusedCard, setisModalFocused] = useState(false);\r\n    \r\n    const toggleModalFocus = (card) => setisModalFocused(card);\r\n\r\n    const handleCardMove = (targetArea) => {\r\n        props.handleCardMove(modalFocusedCard, props.context, targetArea);\r\n        props.handleModalDismiss();\r\n    }\r\n\r\n    return !modalFocusedCard ? (\r\n        props.cards.map(card => (\r\n            <Card\r\n                className=\"hover-float\"\r\n                key={card.cardKey}\r\n                card={card}\r\n                onClick={() => toggleModalFocus(card)}\r\n            />\r\n        ))\r\n    ) : (\r\n        <CardFocus\r\n            phase={props.phase}\r\n            card={modalFocusedCard}\r\n            context={props.context}\r\n            handleCardMove={handleCardMove}\r\n            handleDismiss={() => toggleModalFocus(null)}\r\n        />\r\n    );\r\n}\r\n\r\nexport default InnerModal;","import React from 'react';\r\nimport Card from '../../atoms/Card';\r\nimport NoCards from '../../atoms/NoCards';\r\nimport InnerModal from '../InnerModal';\r\n\r\nconst PlotArea = (props) => {\r\n    const plotAreaInner = () => (\r\n        <InnerModal\r\n            {...props}\r\n            context=\"plot\"\r\n            handleModalDismiss={() => props.handleModalToggle(null)}\r\n        />\r\n    );\r\n    return (\r\n        <div className=\"plot-area\">\r\n            <div className=\"border\" id={`Plot(${props.cards.length})`}>\r\n                {props.cards.length > 0 ? (\r\n                    <Card\r\n                        className=\"hover-float\"\r\n                        isBackside\r\n                        isLandscape\r\n                        onClick={() => props.handleModalToggle(plotAreaInner)}\r\n                    />\r\n                ) : (\r\n                    <NoCards isLandscape/>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlotArea;","import React from 'react';\r\nimport Card from '../../atoms/Card';\r\nimport NoCards from '../../atoms/NoCards';\r\nimport './PlotDiscardArea.css';\r\n\r\nconst PlotDiscardArea = (props) => {\r\n    const display = props.cards && props.cards.length > 0 ? (\r\n        <Card\r\n            card={props.cards[props.cards.length - 1]}\r\n            className=\"plot hover-float\"\r\n        />\r\n    ) : <NoCards/>\r\n    return (\r\n        <div className=\"plot-discard-area\">\r\n            <div className=\"border\" id={`Plot-Discard(${props.cards.length})`}>\r\n                {display}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlotDiscardArea;","import React/*, { useState }*/ from 'react';\r\nimport Card from '../../atoms/Card';\r\nimport './DrawPile.css';\r\n\r\nconst DrawPile = (props) => {\r\n    return (\r\n        <Card\r\n            className=\"draw-pile hover-float\"\r\n            isBackside\r\n            onClick={() => props.handleDraw()}\r\n        >\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default DrawPile;","import React from 'react';\r\nimport NoCards from '../../atoms/NoCards';\r\nimport Card from '../../atoms/Card';\r\nimport InnerModal from '../InnerModal';\r\n\r\nconst OutOfPlayArea = (props) => {\r\n    const areaReplace = props.area.replace(/Area/g, '')\r\n    const outOfPlayInner = (\r\n        <InnerModal\r\n            {...props}\r\n            context={areaReplace}\r\n            handleModalDismiss={() => props.handleModalToggle(null)}\r\n        />\r\n    );\r\n    const latestCard = props.cards && props.cards.length ? props.cards[props.cards.length - 1] : null;\r\n    const display = latestCard ? (\r\n        <Card\r\n            isLandscape={props.area === 'deadArea'}\r\n            key={props.cards[props.cards.length - 1].cardKey}\r\n            card={props.cards[props.cards.length - 1]}\r\n            onClick={() => props.handleModalToggle(outOfPlayInner)}\r\n            className=\"hover-float\"\r\n        />\r\n    ) : <NoCards/>;\r\n    return (\r\n        <div className={`${areaReplace}-pile`}>\r\n            <div className=\"border\" id={`${props.area.slice(0, 1).toUpperCase().concat(props.area.slice(1).replace(/Area/g, ''))}(${props.cards ? props.cards.length : 0})`}>\r\n                {display}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OutOfPlayArea;","import React from 'react';\r\nimport OutOfPlayArea from '../OutOfPlayArea';\r\nimport './DiscardPile.css';\r\n\r\nconst DiscardArea = (props) => {\r\n    return (\r\n        <OutOfPlayArea\r\n            area=\"discardArea\"\r\n            {...props}\r\n        />\r\n    );\r\n}\r\n\r\nexport default DiscardArea;","import React from 'react';\r\nimport OutOfPlayArea from '../OutOfPlayArea';\r\nimport './DeadArea.css';\r\n\r\nconst DeadArea = (props) => {\r\n    return (\r\n        <OutOfPlayArea\r\n            area=\"deadArea\"\r\n            {...props}\r\n        />\r\n    );\r\n}\r\n\r\nexport default DeadArea;","import React, { useState } from 'react';\r\nimport CardImg from '../../atoms/CardImg';\r\nimport Card from '../../atoms/Card';\r\nimport CardFocus from '../../molecules/CardFocus'\r\nimport './Hand.css';\r\n\r\nconst HandInner = (props) => {\r\n    const [modalFocusedCard, setisModalFocused] = useState(false);\r\n    \r\n    const handleCardMove = (targetArea) => {\r\n        const fromArea = 'hand';\r\n        setisModalFocused(false);\r\n        props.handleCardMove(modalFocusedCard, fromArea, targetArea);\r\n        props.handleModalDismiss();\r\n    }\r\n    const cards = props.cards.map(card => (\r\n        <Card\r\n            key={card.cardKey}\r\n            card={card}\r\n            onClick={() => setisModalFocused(card)}\r\n        />\r\n    ));\r\n    return !modalFocusedCard ? cards : (\r\n        <CardFocus\r\n            handleCardMove={handleCardMove}\r\n            phase={props.phase}\r\n            card={modalFocusedCard}\r\n            context=\"hand\"\r\n            handleDismiss={() => setisModalFocused(null)}\r\n        />\r\n    );\r\n}\r\n\r\nconst Hand = (props) => {\r\n    const handInner = (\r\n        <HandInner\r\n            cards={props.cards}\r\n            phase={props.phase}\r\n            handleCardMove={props.handleCardMove}\r\n            handleModalDismiss={() => props.handleModalToggle(null)}\r\n        />\r\n    );\r\n    return (\r\n        <div className=\"hand hover-float\" onClick={() => props.handleModalToggle(handInner)}>\r\n            {[1, 2, 3].map(i => <CardImg key={i} isBackside/>)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Hand;","import React from 'react';\r\nimport Button from '../Button';\r\nimport './ToggleShowButton.css';\r\n\r\nconst ToggleShowButton = (props) => {\r\n    const leftArrow = '\\u2190';\r\n    const rightArrow = '\\u2192';\r\n    const displayArrow = ((props.isLeft && props.isShowing) || (!props.isLeft && !props.isShowing)) ? leftArrow : rightArrow;\r\n    const posStyle = props.isLeft ? { right: 0 } : { left: 0 };\r\n    return (\r\n        <Button\r\n            className={`toggle-show-button ${props.isShowing ? 'showing' : 'collapsed'}`}\r\n            onClick={props.onClick}\r\n            style={posStyle}\r\n        >\r\n            <span>{displayArrow}</span>\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport default ToggleShowButton;","import React from 'react'\r\nimport UiCard from '../../atoms/UiCard';\r\nimport './Modal.css';\r\n\r\nconst Modal = (props) => {\r\n    return (\r\n        <div className=\"modal-container\">\r\n            <UiCard\r\n                className=\"modal-display-container\"\r\n            >\r\n                <div className=\"close-btn hover-float\" onClick={props.handleClose}>&times;</div>\r\n                <div className=\"modal-display\">\r\n                    {props.children && props.children}\r\n                </div>\r\n            </UiCard>\r\n            <div className=\"modal-bg\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Modal;","import React, { useState } from 'react';\r\nimport HUD from '../HUD';\r\nimport FactionArea from '../FactionArea';\r\nimport CharacterArea from '../CharacterArea';\r\nimport LocationArea from '../LocationArea';\r\nimport PlotArea from '../PlotArea';\r\nimport PlotDiscardArea from '../PlotDiscardArea';\r\nimport DrawPileArea from '../DrawPileArea';\r\nimport DiscardArea from '../DiscardArea';\r\nimport DeadArea from '../DeadArea';\r\nimport Hand from '../Hand';\r\nimport ToggleShowButton from '../../atoms/ToggleShowButton';\r\nimport Modal from '../../molecules/Modal';\r\nimport './GameBoard.css';\r\n\r\nconst GameBoard = (props) => {\r\n    const [modalChildren, setModalChildren] = useState(null);\r\n    const [isLefthandShowing, setIsLefthandShowing] = useState(true);\r\n    const [isRighthandShowing, setIsRighthandShowing] = useState(true);\r\n\r\n    const handleRevertGameState = () => {\r\n        if (props.gameState.length === 0) return;\r\n        props.handleGameStateUpdate('revert');\r\n    }\r\n    const moveCardTo = (card, fromArea, targetArea) => {\r\n        console.log('moveCardTo', fromArea);\r\n        if (/(plot|dead|discard)/gi.test(fromArea)) fromArea = fromArea.concat('Area'); //shitty fix for now\r\n        console.log('moveCardTo', card, fromArea, targetArea);\r\n        props.handleGameStateUpdate({card, fromArea, targetArea});\r\n    }\r\n    const moveTokenTo = (card, token, fromSource) => {\r\n        //console.log('moveTokenTo', card, token, fromSource);\r\n    }\r\n    const kneelToggle = (card, fromArea) => {\r\n        props.handleGameStateUpdate({card, cardStatus: card.status === 'standing' ? 'kneeling' : 'standing', fromArea});\r\n    }\r\n    const handleDraw = (amt = 1) => {\r\n        //console.log('handleDraw', amt);\r\n        props.handleGameStateUpdate({drawAmt: amt});\r\n    }\r\n    /*const advancePhase = () => {\r\n        console.log('advancePhase');\r\n    }*/\r\n\r\n    const handleToggle = (dir) => dir === 'left' ? setIsLefthandShowing(!isLefthandShowing) : setIsRighthandShowing(!isRighthandShowing)\r\n\r\n    const gameBoardGridStyle = {\r\n        gridTemplateColumns: `${isLefthandShowing ? '20em' : '3em'} auto ${isRighthandShowing ? '22.5em' : '3em'}`\r\n    }\r\n    return (\r\n        <div className=\"game-board\" style={gameBoardGridStyle}>\r\n            <HUD\r\n                phase={props.gameState.phase}\r\n                tokenState={props.gameState.tokenState}\r\n                handleRevert={handleRevertGameState}\r\n            />\r\n            <div className={`lefthand-area ${isLefthandShowing ? 'showing' : 'collapsed'}`}>\r\n                <div className=\"area\">\r\n                    <PlotDiscardArea\r\n                        cards={props.gameState.plotDiscardArea}\r\n                        handleCardMove={moveCardTo}\r\n                        handleModalToggle={setModalChildren}\r\n                    />\r\n                    <PlotArea\r\n                        cards={props.gameState.plotArea}\r\n                        handleCardMove={moveCardTo}\r\n                        handleModalToggle={setModalChildren}\r\n                    />\r\n                </div>\r\n                <ToggleShowButton\r\n                    isLeft\r\n                    isShowing={isLefthandShowing}\r\n                    onClick={() => handleToggle('left')}\r\n                />\r\n            </div>\r\n            <div className=\"area in-play-area showing\">\r\n                <CharacterArea\r\n                    cards={props.gameState.characterArea}\r\n                    handleCardMove={moveCardTo}\r\n                    handleTokenMove={moveTokenTo}\r\n                    handleKneel={kneelToggle}\r\n                />\r\n                <LocationArea\r\n                    cards={props.gameState.locationArea}\r\n                    handleCardMove={moveCardTo}\r\n                    handleTokenMove={moveTokenTo}\r\n                    handleKneel={kneelToggle}\r\n                />\r\n            </div>\r\n            <div className={`righthand-area ${isRighthandShowing ? 'showing' : 'collapsed'}`}>\r\n                <div className=\"area\">\r\n                    <FactionArea\r\n                        cards={props.gameState.factionArea}\r\n                        handleTokenMove={moveTokenTo}\r\n                        handleKneel={kneelToggle}\r\n                    />\r\n                    <DiscardArea\r\n                        cards={props.gameState.discardArea}\r\n                        handleCardMove={moveCardTo}\r\n                        handleModalToggle={setModalChildren}\r\n                    />\r\n                    <DeadArea\r\n                        cards={props.gameState.deadArea}\r\n                        handleCardMove={moveCardTo}\r\n                        handleModalToggle={setModalChildren}\r\n                    />\r\n                </div>\r\n                <ToggleShowButton\r\n                    isShowing={isRighthandShowing}\r\n                    onClick={() => handleToggle('right')}\r\n                />\r\n            </div>\r\n            <div className=\"play-controls-area\">\r\n                <Hand\r\n                    phase={props.gameState.phase ? props.gameState.phase : 'marshal'}\r\n                    cards={props.gameState.hand}\r\n                    handleCardMove={moveCardTo}\r\n                    handleModalToggle={setModalChildren}\r\n                />\r\n                <DrawPileArea\r\n                    cards={props.gameState.drawPileArea}\r\n                    handleDraw={handleDraw}\r\n                />\r\n            </div>\r\n            {modalChildren && (\r\n                <Modal\r\n                    handleClose={() => setModalChildren(null)}\r\n                >\r\n                    {modalChildren}\r\n                </Modal>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GameBoard;","import React from 'react';\r\nimport cardCache from '../../../helpers/cardCache';\r\nimport DeckUiCard from '../../molecules/DeckUiCard';\r\n\r\nconst GameSetup = (props) => {\r\n    const deckList = cardCache.get('decklist', null, 'all');\r\n    const decks = deckList.map(deck => (\r\n        <DeckUiCard\r\n            className=\"hover-float\"\r\n            deck={deck}\r\n            key={deck.id}\r\n            onClick={() => props.handleSelectDeck(deck)}\r\n        />\r\n    ));\r\n    return (\r\n        <div className=\"game-setup\">\r\n            <header>\r\n                <h1>Select a deck to play.</h1>\r\n            </header>\r\n            <div className=\"deck-results-container\">\r\n                {decks}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameSetup;","const shuffle = (arr) => {\r\n    for (let i = (arr.length - 1); i > 0; i -= 1) {\r\n        const randomIndex = Math.floor(Math.random() * (i + 1));\r\n        [arr[i], arr[randomIndex]] = [arr[randomIndex], arr[i]];\r\n    }\r\n    return arr;\r\n}\r\n\r\nexport default shuffle;","const getNewGameState = (params, gameState) => {\r\n    //console.log('getNewGameState', params);\r\n    const updatedParams = () => {\r\n        if (params.targetArea) {\r\n            const updatedFromList = gameState[params.fromArea].filter(c => c.cardKey !== params.card.cardKey);\r\n            const updatedTargetList = gameState[params.targetArea].concat(params.card);\r\n            return {\r\n                [params.fromArea]: updatedFromList,\r\n                [params.targetArea]: updatedTargetList\r\n            };\r\n        }\r\n        if (params.cardStatus) {\r\n            const updatedCardStatus = {\r\n                status: params.cardStatus\r\n            };\r\n            const updatedCardObj = Object.assign({}, params.card, updatedCardStatus);\r\n            const updatedFromList = gameState[params.fromArea].map(c => c.cardKey === params.card.cardKey ? updatedCardObj : c);\r\n            return {\r\n                [params.fromArea]: updatedFromList\r\n            };\r\n        }\r\n        if (params.drawAmt) {\r\n            //console.log('drawAmt', params.drawAmt);\r\n            const drawCards = gameState.drawPileArea.slice(0, params.drawAmt);\r\n            const updatedDrawPileArea = gameState.drawPileArea.slice(params.drawAmt + 1);\r\n            const updatedHand = gameState.hand.concat(drawCards).flat(); //test - may not need flat()\r\n            return {\r\n                hand: updatedHand,\r\n                drawPileArea: updatedDrawPileArea\r\n            };\r\n        }\r\n    }\r\n    const updatedGameState = Object.assign({}, gameState, updatedParams());\r\n    return updatedGameState;\r\n}\r\n\r\nexport default getNewGameState;","import React, { useState } from 'react';\r\nimport Page from '../../molecules/Page';\r\nimport GameBoard from '../../organisms/GameBoard';\r\nimport GameSetup from '../../organisms/GameSetup';\r\nimport shuffle from '../../../helpers/shuffle';\r\nimport getNewGameState from '../../../helpers/getNewGameState';\r\nimport baratheon from '../../../media/factions/baratheon-faction.jpg';\r\nimport greyjoy from '../../../media/factions/greyjoy-faction.jpg';\r\nimport lannister from '../../../media/factions/lannister-faction.jpg';\r\nimport martell from '../../../media/factions/martell-faction.jpg';\r\nimport thenightswatch from '../../../media/factions/nights-watch-faction.jpg';\r\nimport stark from '../../../media/factions/stark-faction.jpg';\r\nimport targaryen from '../../../media/factions/targaryen-faction.jpg';\r\nimport tyrell from '../../../media/factions/tyrell-faction.jpg';\r\n\r\nconst factions = {\r\n    baratheon,\r\n    greyjoy,\r\n    lannister,\r\n    martell,\r\n    thenightswatch,\r\n    stark,\r\n    targaryen,\r\n    tyrell\r\n};\r\n\r\nconst Play = () => {\r\n    const [gameStates, setGameState] = useState([]); //extend: allow continue game option (use a getter instead of empty array)\r\n    \r\n    const gameStateTemplate = {\r\n        phase: 'plot',\r\n        drawPileArea: [],\r\n        plotArea: [],\r\n        hand: [],\r\n        characterArea: [],\r\n        locationArea: [],\r\n        plotDiscardArea: [],\r\n        discardArea: [],\r\n        deadArea: [],\r\n        tokenState: {\r\n            gold: 0,\r\n            initiative: null,\r\n            claim: null\r\n        }\r\n    }\r\n    const handleSelectDeck = (deck) => {\r\n        const isAgenda = (c) => c.type_code === 'agenda';\r\n        const isPlot = (c) => c.type_code === 'plot';\r\n        const factionCard = {\r\n            cardKey: -1, //reserved key from apiHelpers\r\n            //faction_code\r\n            faction_code: deck.faction_code,\r\n            status: 'standing',\r\n            tokenState: {\r\n                gold: 0,\r\n                power: 0\r\n            },\r\n            type_code: 'faction',\r\n            image_url: factions[deck.faction_code]\r\n        };\r\n        const factionArea = deck.cards.filter(isAgenda).concat(factionCard); //check & improve\r\n        const plotArea = deck.cards.filter(isPlot); //check & improve\r\n        const shuffledDrawDeck = shuffle(deck.cards.filter(card => !isAgenda(card) && !isPlot(card)));\r\n        const autoSetupHand = shuffledDrawDeck.slice(0, 7);\r\n        const drawPileArea = shuffledDrawDeck.slice(8);\r\n        const initGameStateProps = {\r\n            factionArea,\r\n            drawPileArea,\r\n            plotArea,\r\n            hand: autoSetupHand //extend (user sets to auto-receive setup hand on start of game): settings.autoSetupHand ? autoSetupHand : []\r\n        };\r\n        const initGameState = Object.assign({}, gameStateTemplate, initGameStateProps);\r\n        setGameState(gameStates.concat(initGameState));\r\n    }\r\n    const getCurrentGameState = () => gameStates[gameStates.length - 1];\r\n\r\n    const handleGameStateUpdate = (params) => { //extend - determine which type of game state update needs to take place; add a \"commit message\" i.e. ${actor} ${verb} ${subject}\r\n        //doesn't work - troubleshoot\r\n        if (params === 'revert') {\r\n            const updatedState = gameStates.length === 1 ? [gameStateTemplate] : gameStates.slice(0, gameStates.length - 1);\r\n            //console.log('new gameState arr should be', updatedState);\r\n            setGameState(updatedState);\r\n        }\r\n        setGameState(gameStates.concat(\r\n            getNewGameState(params, getCurrentGameState())\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <Page className=\"play-container\">\r\n            {gameStates.length === 0 ? (\r\n                <GameSetup\r\n                    handleSelectDeck={handleSelectDeck}\r\n                />\r\n            ) : (\r\n                <GameBoard\r\n                    gameState={getCurrentGameState()}\r\n                    handleGameStateUpdate={handleGameStateUpdate}\r\n                />\r\n            )}\r\n        </Page>\r\n    );\r\n}\r\n\r\nexport default Play;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Page from '../../../molecules/Page';\r\nimport DeckUiCard from '../../../molecules/DeckUiCard';\r\nimport cardCache from '../../../../helpers/cardCache';\r\n\r\nconst MyRoot = (props) => {\r\n    const deckList = cardCache.get('savelist', null, 'all');\r\n    const decks = deckList.map(deck => (\r\n        <Link key={deck.id} to={`${props.match.url}/decks/${deck.id}`}>\r\n            <DeckUiCard\r\n                deck={deck}\r\n            />\r\n        </Link>\r\n    ));\r\n    return (\r\n        <Page className=\"my-root\">\r\n            <header>\r\n                <h1>My decks and cards</h1>\r\n            </header>\r\n            <div className=\"deck-results-container\">\r\n                {decks}\r\n            </div>\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default MyRoot;","import React from 'react';\r\nimport Page from '../../../molecules/Page';\r\nimport Button from '../../../atoms/Button';\r\nimport cardCache from '../../../../helpers/cardCache';\r\n\r\nconst MyDecks = (props) => {\r\n    const deck = cardCache.get('decklist', props.match.params.id);\r\n    const display = !deck ? (\r\n        <div>\r\n            <h1>Deck not found.</h1>\r\n        </div>\r\n    ) : (\r\n        <header>\r\n            {deck.name}\r\n        </header>\r\n    );\r\n    return (\r\n        <Page className=\"my-decks\">\r\n            <div className=\"back-button-container\">\r\n                <Button to=\"/my\">&larr;</Button>\r\n            </div>\r\n            <div className=\"deck-display-single\">\r\n                {display}\r\n            </div>\r\n        </Page>\r\n    );\r\n}\r\n\r\nexport default MyDecks;","import React from 'react';\r\nimport Page from '../../../molecules/Page';\r\n\r\nconst MyCards = (props) => {\r\n    return (\r\n        <Page className=\"my-cards\">\r\n\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default MyCards;","import React, { Fragment } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport MyRoot from './MyRoot';\r\nimport MyDecks from './MyDecks';\r\nimport MyCards from './MyCards';\r\n\r\nconst My = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <Route\r\n                exact\r\n                path={props.match.url}\r\n                component={MyRoot}\r\n            />\r\n            <Route\r\n                path={`${props.match.url}/decks/:id`}\r\n                component={MyDecks}\r\n            />\r\n            <Route\r\n                path={`${props.match.url}/cards/:id`}\r\n                component={MyCards}\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default My;","import React, { Fragment } from 'react';\r\nimport { BrowserRouter as Router, HashRouter, Switch, Route } from 'react-router-dom';\r\nimport Nav from './components/molecules/Nav';\r\nimport Splash from './components/pages/Splash';\r\nimport Get from './components/pages/Get';\r\nimport Play from './components/pages/Play';\r\nimport My from './components/pages/My';\r\nimport './App.css';\r\n\r\nconst withHashRouter = (routes) => (\r\n\t<HashRouter>\r\n\t\t{routes}\r\n\t</HashRouter>\r\n);\r\n\r\nconst withBrowserRouter = (routes) => (\r\n\t<Router>\r\n\t\t{routes}\r\n\t</Router>\r\n);\r\n\r\nconst withContainer = (routes) => {\r\n\tconst isGhPages = window.location.href.indexOf('github.io') > -1;\r\n\treturn (\r\n\t\t<div className=\"app\">\r\n\t\t\t{isGhPages ? withHashRouter(routes) : withBrowserRouter(routes)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst App = () =>  {\r\n\tconst routes = (\r\n\t\t<Fragment>\r\n\t\t\t<Nav/>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route\r\n\t\t\t\t\texact\r\n\t\t\t\t\tpath=\"/\"\r\n\t\t\t\t\tcomponent={Splash}\r\n\t\t\t\t/>\r\n\t\t\t\t<Route\r\n\t\t\t\t\tpath=\"/get\"\r\n\t\t\t\t\tcomponent={Get}\r\n\t\t\t\t/>\r\n\t\t\t\t<Route\r\n\t\t\t\t\tpath=\"/play\"\r\n\t\t\t\t\tcomponent={Play}\r\n\t\t\t\t/>\r\n\t\t\t\t<Route\r\n\t\t\t\t\tpath=\"/my\"\r\n\t\t\t\t\tcomponent={My}\r\n\t\t\t\t/>\r\n\t\t\t</Switch>\r\n\t\t</Fragment>\r\n\t);\r\n\treturn withContainer(routes);\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();"],"sourceRoot":""}